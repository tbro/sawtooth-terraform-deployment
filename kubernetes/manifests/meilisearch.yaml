apiVersion: v1 
kind: Namespace 
metadata: 
  creationTimestamp: null 
  name: search
spec: {}
status: {}

---
# Source: meilisearch/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: meilisearch
  namespace: search
  labels:
    app.kubernetes.io/name: meilisearch
    app.kubernetes.io/instance: meilisearch
---
# Source: meilisearch/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: meilisearch-environment
  namespace: search
  labels:
    app.kubernetes.io/name: meilisearch
    app.kubernetes.io/instance: meilisearch
data:
  MEILI_ENV: "development"
  MEILI_NO_ANALYTICS: "true"
---
# Source: meilisearch/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: meilisearch
  namespace: search
  labels:
    app.kubernetes.io/name: meilisearch
    app.kubernetes.io/instance: meilisearch
spec:
  type: ClusterIP
  ports:
    - port: 7700
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: meilisearch
    app.kubernetes.io/instance: meilisearch
---
# Source: meilisearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: meilisearch
  namespace: search
  labels:
    app.kubernetes.io/name: meilisearch
    app.kubernetes.io/instance: meilisearch
spec:
  replicas: 1
  serviceName: search
  selector:
    matchLabels:
      app.kubernetes.io/name: meilisearch
      app.kubernetes.io/instance: meilisearch
  template:
    metadata:
      labels:
        app.kubernetes.io/name: meilisearch
        app.kubernetes.io/instance: meilisearch
    spec:
      serviceAccountName: meilisearch
      containers:
        - name: meilisearch
          image: "getmeili/meilisearch:v0.27.0"
          imagePullPolicy: IfNotPresent
          command: ["/bin/meilisearch"]
          args: ["--enable-auto-batching"]
          envFrom:
          - configMapRef:
              name: meilisearch-environment
          ports:
            - name: http
              containerPort: 7700
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 30
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 30
            initialDelaySeconds: 10
          resources:
            {}
          volumeMounts:
            - name: search-data
              mountPath: "/meili_data"
  volumeClaimTemplates:
  - metadata:
      name: search-data
      namespace: search 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "gp2"
      resources:
        requests:
          storage: 10Gi
---
# Source: meilisearch/templates/tests/test-connection.yaml
# NOTE this often runs to early to succeed
apiVersion: v1
kind: Pod
metadata:
  name: setup
  namespace: search
  labels:
    app.kubernetes.io/name: meilisearch
    app.kubernetes.io/instance: meilisearch
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - image: curlimages/curl
      name: filters
      command:
        - /bin/sh
        - -c
        - |
          sleep 90
          curl -X POST http://meilisearch:7700/indexes/visibility/settings \
            -H 'Content-Type: application/json' \
            --data-binary '{"filterableAttributes":["seconds"],"sortableAttributes":["seconds"]}'
  restartPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: mielisearch
  namespace: search 
spec:
  ports:
  - port: 7700
    name: rest
  type: LoadBalancer
  selector:
    statefulset.kubernetes.io/pod-name: meilisearch-0
